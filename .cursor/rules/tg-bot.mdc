---
description: 
globs: 
alwaysApply: true
---
本文档定义了TG Empire项目的开发规范、架构准则和质量标准，确保项目按照既定的技术路线和最佳实践进行开发。

## 🏗️ 架构准则 (Architecture Rules)

### AR-001: 单一技术栈原则
**规则**: 前端必须统一使用Vue 3 + Vite技术栈
- ✅ **允许**: Vue 3组件、Vite构建、TypeScript/JavaScript
- ❌ **禁止**: 静态HTML页面、jQuery、其他框架混用
- **违规处理**: 立即移除非Vue实现，重构为Vue组件

### AR-002: Mini App架构原则
**规则**: 所有前端应用必须基于Telegram Mini App架构
- ✅ **允许**: 使用@twa-dev/sdk、Telegram WebApp API
- ❌ **禁止**: 传统Web页面、非Mini App实现
- **目录结构**: `frontend/src/apps/{AppName}/{AppName}.vue`

### AR-003: API设计原则
**规则**: 后端API必须遵循RESTful设计规范
- ✅ **允许**: `/api/v1/` 前缀、标准HTTP方法、JSON格式
- ❌ **禁止**: 非标准路由、混合数据格式
- **版本控制**: 使用URL版本控制 (`/api/v1/`, `/api/v2/`)

### AR-004: 数据库设计原则
**规则**: 数据库设计必须符合第三范式
- ✅ **允许**: PostgreSQL主库、Redis缓存、标准化设计
- ❌ **禁止**: 数据冗余、非标准化设计
- **命名规范**: 表名小写下划线、字段名小写下划线

## 🔧 开发规范 (Development Standards)

### DS-001: 代码组织规范
```
backend/
├── src/
│   ├── controllers/     # 控制器层
│   ├── services/        # 业务逻辑层
│   ├── models/          # 数据模型层
│   ├── routes/          # 路由定义
│   ├── middleware/      # 中间件
│   ├── utils/           # 工具函数
│   └── config/          # 配置文件

frontend/
├── src/
│   ├── apps/            # Mini App应用
│   │   └── {AppName}/   # 具体应用目录
│   ├── components/      # 共享组件
│   ├── utils/           # 工具函数
│   └── assets/          # 静态资源
```

### DS-002: 命名规范
- **文件名**: PascalCase for components, camelCase for utilities
- **变量名**: camelCase
- **常量名**: UPPER_SNAKE_CASE
- **API路由**: kebab-case
- **数据库**: snake_case

### DS-003: 代码质量标准
- **函数长度**: 不超过50行
- **文件长度**: 不超过500行
- **圈复杂度**: 不超过10
- **测试覆盖率**: 不低于80%

## 🚫 禁止事项 (Forbidden Practices)

### FP-001: 技术栈混用
❌ **严格禁止**:
- 在Vue项目中使用静态HTML页面
- 混用多个前端框架
- 绕过既定的技术架构

### FP-002: 硬编码配置
❌ **严格禁止**:
- API地址硬编码
- 数据库连接信息硬编码
- 环境相关配置硬编码

### FP-003: 直接数据库操作
❌ **严格禁止**:
- 在控制器中直接操作数据库
- 跳过服务层的业务逻辑
- SQL注入风险的查询

### FP-004: 未经授权的依赖
❌ **严格禁止**:
- 添加未经评估的第三方库
- 使用有安全风险的依赖
- 引入与项目架构不符的库